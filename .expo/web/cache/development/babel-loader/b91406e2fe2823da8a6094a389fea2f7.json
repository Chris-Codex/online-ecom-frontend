{"ast":null,"code":"import React, { useContext } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AntDesign, MaterialCommunityIcons, FontAwesome5 } from \"@expo/vector-icons\";\nimport HomeScreen from \"./Home_NavStack\";\nimport ProductCartScreen from \"./Cart_NavStack\";\nimport UserNavigation from \"./User_NavStack\";\nimport AdminNavigation from \"./Admin_NavStack\";\nimport AuthenticateGlobal from \"../ContextApi/store/AuthenticateGlobal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar AppStacks = function AppStacks() {\n  var _useContext = useContext(AuthenticateGlobal),\n      userState = _useContext.userState;\n\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    tabBarOptions: {\n      tabBarHideOnKeyboard: true,\n      tabBarActiveTintColor: \"#e91e63\",\n      tabBarShowLabel: false,\n      tabBarStyle: [{\n        display: \"flex\"\n      }, null]\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color;\n          return _jsx(AntDesign, {\n            name: \"home\",\n            size: 30,\n            style: {\n              position: \"relative\"\n            },\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Cart\",\n      component: ProductCartScreen,\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color;\n          return _jsx(View, {\n            children: _jsx(MaterialCommunityIcons, {\n              name: \"cart-arrow-right\",\n              size: 30,\n              style: {\n                position: \"relative\"\n              },\n              color: \"#FAC5B4\"\n            })\n          });\n        }\n      }\n    }), userState.userProfile.isAdmin ? _jsx(Tab.Screen, {\n      name: \"Admin\",\n      component: AdminNavigation,\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return _jsx(AntDesign, {\n            name: \"amazon\",\n            size: 30,\n            color: \"#FAC5B4\"\n          });\n        }\n      }\n    }) : null, _jsx(Tab.Screen, {\n      name: \"User\",\n      component: UserNavigation,\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color;\n          return _jsx(FontAwesome5, {\n            name: \"user-cog\",\n            size: 30,\n            color: \"#FAC5B4\"\n          });\n        }\n      }\n    })]\n  });\n};\n\nexport default AppStacks;","map":{"version":3,"names":["React","useContext","createBottomTabNavigator","AntDesign","MaterialCommunityIcons","FontAwesome5","HomeScreen","ProductCartScreen","UserNavigation","AdminNavigation","AuthenticateGlobal","Tab","AppStacks","userState","tabBarHideOnKeyboard","tabBarActiveTintColor","tabBarShowLabel","tabBarStyle","display","headerShown","tabBarIcon","color","position","userProfile","isAdmin"],"sources":["C:/Users/User/Desktop/myProjectNative/online-ecom-frontend/navigations/MainNavigation.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\n\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { View } from \"react-native\";\r\n\r\nimport {\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  FontAwesome5,\r\n} from \"@expo/vector-icons\";\r\n\r\n//stacks\r\nimport HomeScreen from \"./Home_NavStack\";\r\nimport ProductCartScreen from \"./Cart_NavStack\";\r\nimport UserNavigation from \"./User_NavStack\";\r\nimport AdminNavigation from \"./Admin_NavStack\";\r\nimport AuthenticateGlobal from \"../ContextApi/store/AuthenticateGlobal\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst AppStacks = () => {\r\n  const { userState } = useContext(AuthenticateGlobal);\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Home\"\r\n      tabBarOptions={{\r\n        tabBarHideOnKeyboard: true,\r\n        tabBarActiveTintColor: \"#e91e63\",\r\n        tabBarShowLabel: false,\r\n        tabBarStyle: [\r\n          {\r\n            display: \"flex\",\r\n          },\r\n          null,\r\n        ],\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{\r\n          headerShown: false,\r\n\r\n          tabBarIcon: ({ color }) => (\r\n            <AntDesign\r\n              name=\"home\"\r\n              size={30}\r\n              style={{ position: \"relative\" }}\r\n              color={color}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Cart\"\r\n        component={ProductCartScreen}\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color }) => (\r\n            <View>\r\n              <MaterialCommunityIcons\r\n                name=\"cart-arrow-right\"\r\n                size={30}\r\n                style={{ position: \"relative\" }}\r\n                color=\"#FAC5B4\"\r\n              />\r\n              {/* <IconCart /> */}\r\n            </View>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      {userState.userProfile.isAdmin ? (\r\n        <Tab.Screen\r\n          name=\"Admin\"\r\n          component={AdminNavigation}\r\n          options={{\r\n            headerShown: false,\r\n            tabBarIcon: ({ color }) => (\r\n              <AntDesign name=\"amazon\" size={30} color=\"#FAC5B4\" />\r\n            ),\r\n          }}\r\n        />\r\n      ) : null}\r\n\r\n      <Tab.Screen\r\n        name=\"User\"\r\n        component={UserNavigation}\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color }) => (\r\n            <FontAwesome5 name=\"user-cog\" size={30} color=\"#FAC5B4\" />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default AppStacks;\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,wBAAT,QAAyC,+BAAzC;;AAGA,SACEC,SADF,EAEEC,sBAFF,EAGEC,YAHF,QAIO,oBAJP;AAOA,OAAOC,UAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,eAAP;AACA,OAAOC,kBAAP;;;AAEA,IAAMC,GAAG,GAAGT,wBAAwB,EAApC;;AAEA,IAAMU,SAAS,GAAG,SAAZA,SAAY,GAAM;EACtB,kBAAsBX,UAAU,CAACS,kBAAD,CAAhC;EAAA,IAAQG,SAAR,eAAQA,SAAR;;EACA,OACE,MAAC,GAAD,CAAK,SAAL;IACE,gBAAgB,EAAC,MADnB;IAEE,aAAa,EAAE;MACbC,oBAAoB,EAAE,IADT;MAEbC,qBAAqB,EAAE,SAFV;MAGbC,eAAe,EAAE,KAHJ;MAIbC,WAAW,EAAE,CACX;QACEC,OAAO,EAAE;MADX,CADW,EAIX,IAJW;IAJA,CAFjB;IAAA,WAcE,KAAC,GAAD,CAAK,MAAL;MACE,IAAI,EAAC,MADP;MAEE,SAAS,EAAEZ,UAFb;MAGE,OAAO,EAAE;QACPa,WAAW,EAAE,KADN;QAGPC,UAAU,EAAE;UAAA,IAAGC,KAAH,QAAGA,KAAH;UAAA,OACV,KAAC,SAAD;YACE,IAAI,EAAC,MADP;YAEE,IAAI,EAAE,EAFR;YAGE,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAZ,CAHT;YAIE,KAAK,EAAED;UAJT,EADU;QAAA;MAHL;IAHX,EAdF,EA8BE,KAAC,GAAD,CAAK,MAAL;MACE,IAAI,EAAC,MADP;MAEE,SAAS,EAAEd,iBAFb;MAGE,OAAO,EAAE;QACPY,WAAW,EAAE,KADN;QAEPC,UAAU,EAAE;UAAA,IAAGC,KAAH,SAAGA,KAAH;UAAA,OACV,KAAC,IAAD;YAAA,UACE,KAAC,sBAAD;cACE,IAAI,EAAC,kBADP;cAEE,IAAI,EAAE,EAFR;cAGE,KAAK,EAAE;gBAAEC,QAAQ,EAAE;cAAZ,CAHT;cAIE,KAAK,EAAC;YAJR;UADF,EADU;QAAA;MAFL;IAHX,EA9BF,EAiDGT,SAAS,CAACU,WAAV,CAAsBC,OAAtB,GACC,KAAC,GAAD,CAAK,MAAL;MACE,IAAI,EAAC,OADP;MAEE,SAAS,EAAEf,eAFb;MAGE,OAAO,EAAE;QACPU,WAAW,EAAE,KADN;QAEPC,UAAU,EAAE;UAAA,IAAGC,KAAH,SAAGA,KAAH;UAAA,OACV,KAAC,SAAD;YAAW,IAAI,EAAC,QAAhB;YAAyB,IAAI,EAAE,EAA/B;YAAmC,KAAK,EAAC;UAAzC,EADU;QAAA;MAFL;IAHX,EADD,GAWG,IA5DN,EA8DE,KAAC,GAAD,CAAK,MAAL;MACE,IAAI,EAAC,MADP;MAEE,SAAS,EAAEb,cAFb;MAGE,OAAO,EAAE;QACPW,WAAW,EAAE,KADN;QAEPC,UAAU,EAAE;UAAA,IAAGC,KAAH,SAAGA,KAAH;UAAA,OACV,KAAC,YAAD;YAAc,IAAI,EAAC,UAAnB;YAA8B,IAAI,EAAE,EAApC;YAAwC,KAAK,EAAC;UAA9C,EADU;QAAA;MAFL;IAHX,EA9DF;EAAA,EADF;AA2ED,CA7ED;;AA+EA,eAAeT,SAAf"},"metadata":{},"sourceType":"module"}