{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FormContainer from \"../welcomeHeader/ReusableForms/FormContainer\";\nimport FormInput from \"../welcomeHeader/ReusableForms/FormInput\";\nimport FormError from \"../welcomeHeader/ReusableForms/FormError\";\nimport AuthenticateGlobal from \"../../ContextApi/store/AuthenticateGlobal\";\nimport { login } from \"../../ContextApi/actions/Authentication\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _ref = Dimensions.get(\"window\").width / 1.2,\n    width = _ref.width;\n\nvar Login = function Login(props) {\n  var context = useContext(AuthenticateGlobal);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  useEffect(function () {\n    console.log(\"LOGIN\", context.userState.userProfile);\n    props.navigation.navigate(\"UserProfile\");\n\n    if (context.userState.isAuth === true) {\n      console.log(\"User is authenticated\", context.userState.user);\n      props.navigation.navigate(\"UserProfile\");\n    }\n  }, [context.userState.isAuth]);\n\n  var submitLogin = function submitLogin() {\n    var user = {\n      email: email,\n      password: password\n    };\n\n    if (email === \"\" || password === \"\") {\n      setError(\"Please fill all fields\");\n    } else {\n      login(user, context.dispatch);\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.Container,\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      children: [_jsx(Image, {\n        source: {\n          uri: \"https://www.graphicsprings.com/filestorage/stencils/3055581cff0526602142cbb0bfba9fca.png?width=500&height=500\"\n        },\n        style: styles.logo\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"GRIFFITH-STORE\"\n      })]\n    }), _jsxs(FormContainer, {\n      title: \"User Login\",\n      children: [_jsx(FormInput, {\n        placeholder: \"Enter your E-mail\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text.toLowerCase());\n        },\n        id: \"email\",\n        name: \"email\"\n      }), _jsx(FormInput, {\n        placeholder: \"Enter your Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        id: \"password\",\n        name: \"password\",\n        secureTextEntry: true\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          marginLeft: 75\n        },\n        children: [_jsx(Text, {\n          children: \"Don't have an account: \"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.navigate(\"Register\");\n          },\n          children: _jsx(View, {\n            children: _jsx(Text, {\n              style: {\n                fontWeight: \"bold\",\n                fontSize: 15\n              },\n              children: \"Register\"\n            })\n          })\n        })]\n      }), error ? _jsx(FormError, {\n        error: error\n      }) : null, _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return submitLogin();\n        },\n        children: _jsx(View, {\n          style: styles.loginContainer,\n          children: _jsx(Text, {\n            style: styles.logText,\n            children: \"LOG IN\"\n          })\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  Container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    width: 360,\n    height: \"70%\",\n    marginTop: 50,\n    marginLeft: 17,\n    borderRadius: 20,\n    marginBottom: 50\n  },\n  title: {\n    fontSize: 26,\n    fontWeight: \"bold\",\n    marginTop: 90,\n    marginLeft: -10\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    marginLeft: 10,\n    marginTop: 50\n  },\n  loginContainer: {\n    marginTop: 10,\n    width: 200,\n    height: 50,\n    alignSelf: \"center\",\n    backgroundColor: \"#1662A2\",\n    borderRadius: 20,\n    marginBottom: 20\n  },\n  logText: {\n    color: \"#fff\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    paddingTop: 10\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useEffect","useContext","useState","FormContainer","FormInput","FormError","AuthenticateGlobal","login","Dimensions","get","width","Login","props","context","email","setEmail","password","setPassword","error","setError","console","log","userState","userProfile","navigation","navigate","isAuth","user","submitLogin","dispatch","styles","Container","flexDirection","uri","logo","title","text","toLowerCase","marginLeft","fontWeight","fontSize","loginContainer","logText","StyleSheet","create","flex","backgroundColor","height","marginTop","borderRadius","marginBottom","alignSelf","color","textAlign","paddingTop"],"sources":["C:/Users/User/Desktop/myProjectNative/online-ecom-frontend/pages/User/Login.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Image,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport FormContainer from \"../welcomeHeader/ReusableForms/FormContainer\";\r\nimport FormInput from \"../welcomeHeader/ReusableForms/FormInput\";\r\nimport FormError from \"../welcomeHeader/ReusableForms/FormError\";\r\n\r\n// Conetx API\r\nimport AuthenticateGlobal from \"../../ContextApi/store/AuthenticateGlobal\";\r\nimport { login } from \"../../ContextApi/actions/Authentication\";\r\n\r\nvar { width } = Dimensions.get(\"window\").width / 1.2;\r\n\r\nconst Login = (props) => {\r\n  const context = useContext(AuthenticateGlobal);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"LOGIN\", context.userState.userProfile);\r\n    props.navigation.navigate(\"UserProfile\");\r\n    if (context.userState.isAuth === true) {\r\n      // if user is already logged in, redirect to user profile page\r\n      console.log(\"User is authenticated\", context.userState.user);\r\n      props.navigation.navigate(\"UserProfile\");\r\n    }\r\n  }, [context.userState.isAuth]);\r\n\r\n  //User Authentication\r\n  const submitLogin = () => {\r\n    const user = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    if (email === \"\" || password === \"\") {\r\n      setError(\"Please fill all fields\");\r\n    } else {\r\n      login(user, context.dispatch);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.Container}>\r\n      <View style={{ flexDirection: \"row\" }}>\r\n        <Image\r\n          source={{\r\n            uri: \"https://www.graphicsprings.com/filestorage/stencils/3055581cff0526602142cbb0bfba9fca.png?width=500&height=500\",\r\n          }}\r\n          style={styles.logo}\r\n        />\r\n        <Text style={styles.title}>GRIFFITH-STORE</Text>\r\n      </View>\r\n\r\n      <FormContainer title={\"User Login\"}>\r\n        <FormInput\r\n          placeholder=\"Enter your E-mail\"\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text.toLowerCase())}\r\n          id={\"email\"}\r\n          name={\"email\"}\r\n        />\r\n\r\n        <FormInput\r\n          placeholder=\"Enter your Password\"\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)}\r\n          id={\"password\"}\r\n          name={\"password\"}\r\n          secureTextEntry={true}\r\n        />\r\n        <View style={{ flexDirection: \"row\", marginLeft: 75 }}>\r\n          <Text>Don't have an account: </Text>\r\n          <TouchableOpacity\r\n            onPress={() => props.navigation.navigate(\"Register\")}\r\n          >\r\n            <View>\r\n              <Text style={{ fontWeight: \"bold\", fontSize: 15 }}>Register</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        </View>\r\n        {error ? <FormError error={error} /> : null}\r\n        <TouchableOpacity onPress={() => submitLogin()}>\r\n          <View style={styles.loginContainer}>\r\n            <Text style={styles.logText}>LOG IN</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </FormContainer>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  Container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    width: 360,\r\n    height: \"70%\",\r\n    marginTop: 50,\r\n    marginLeft: 17,\r\n    borderRadius: 20,\r\n    marginBottom: 50,\r\n  },\r\n\r\n  title: {\r\n    fontSize: 26,\r\n    fontWeight: \"bold\",\r\n    marginTop: 90,\r\n    marginLeft: -10,\r\n  },\r\n\r\n  logo: {\r\n    width: 100,\r\n    height: 100,\r\n    marginLeft: 10,\r\n    marginTop: 50,\r\n  },\r\n\r\n  loginContainer: {\r\n    marginTop: 10,\r\n    width: 200,\r\n    height: 50,\r\n    alignSelf: \"center\",\r\n    backgroundColor: \"#1662A2\",\r\n    borderRadius: 20,\r\n    marginBottom: 20,\r\n  },\r\n\r\n  logText: {\r\n    color: \"#fff\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    paddingTop: 10,\r\n  },\r\n});\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}