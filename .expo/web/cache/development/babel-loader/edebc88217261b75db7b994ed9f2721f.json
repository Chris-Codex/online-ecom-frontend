{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Item, Picker, Select } from \"native-base\";\nimport FormContainer from \"../../welcomeHeader/ReusableForms/FormContainer\";\nimport FormInput from \"../../welcomeHeader/ReusableForms/FormInput\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { connect } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get(\"window\").width.width;\n\nvar countries = require(\"../../../data/countries.json\");\n\nvar ProductCheckout = function ProductCheckout(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      orders = _useState2[0],\n      setOrders = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      secondAddress = _useState6[0],\n      setSecondAddress = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      city = _useState8[0],\n      setCity = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      state = _useState10[0],\n      setState = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      zip = _useState12[0],\n      setZip = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      country = _useState14[0],\n      setCountry = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      phone = _useState16[0],\n      setPhone = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      email = _useState18[0],\n      setEmail = _useState18[1];\n\n  useEffect(function () {\n    setOrders(props.cartList);\n    return function () {\n      setOrders([]);\n    };\n  }, []);\n\n  var Checkout = function Checkout() {\n    props.navigation.navigate(\"Payment\", {\n      orders: orders,\n      address: address,\n      secondAddress: secondAddress,\n      city: city,\n      state: state,\n      zip: zip,\n      country: country,\n      phone: phone,\n      email: email\n    });\n  };\n\n  return _jsx(View, {\n    style: {\n      marginLeft: 10,\n      marginTop: 20\n    },\n    children: _jsx(KeyboardAwareScrollView, {\n      viewIsInsideTabBar: true,\n      extraHeight: 200,\n      enableOnAndroid: true,\n      children: _jsxs(FormContainer, {\n        title: \"Shipping/Delivery Address\",\n        children: [_jsx(FormInput, {\n          placeholder: \"Address 1\",\n          onChangeText: function onChangeText(text) {\n            return setAddress(text);\n          },\n          value: address,\n          name: \"Address 1\"\n        }), _jsx(FormInput, {\n          placeholder: \"Address 2\",\n          onChangeText: function onChangeText(text) {\n            return setSecondAddress(text);\n          },\n          value: secondAddress,\n          name: \"Address 2\"\n        }), _jsx(FormInput, {\n          placeholder: \"City\",\n          onChangeText: function onChangeText(text) {\n            return setCity(text);\n          },\n          value: city,\n          name: \"City\"\n        }), _jsx(FormInput, {\n          placeholder: \"Zip Code\",\n          onChangeText: function onChangeText(text) {\n            return setZip(text);\n          },\n          value: zip,\n          keyboardType: \"numeric\",\n          name: \"Zip Code\"\n        }), _jsx(FormInput, {\n          placeholder: \"Country\",\n          onChangeText: function onChangeText(text) {\n            return setCountry(text);\n          },\n          value: country,\n          name: \"Country\"\n        }), _jsx(View, {\n          style: {\n            width: \"100%\",\n            alignItems: \"center\"\n          },\n          children: _jsx(Button, {\n            title: \"Checkout\",\n            onPress: function onPress() {\n              return Checkout();\n            }\n          })\n        })]\n      })\n    })\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var cartList = state.cartList;\n  return {\n    cartList: cartList\n  };\n};\n\nvar styles = StyleSheet.create({\n  cartHeader: {\n    width: width,\n    height: 50,\n    backgroundColor: \"#1662A2\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  headerText: {\n    color: \"#fff\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    paddingTop: 10,\n    justifyContent: \"center\",\n    marginRight: 100\n  },\n  ClearBtn: {\n    width: width,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginLeft: 10\n  }\n});\nexport default connect(mapStateToProps)(ProductCheckout);","map":{"version":3,"names":["React","useState","useEffect","Icon","Item","Picker","Select","FormContainer","FormInput","KeyboardAwareScrollView","connect","width","Dimensions","get","countries","require","ProductCheckout","props","orders","setOrders","address","setAddress","secondAddress","setSecondAddress","city","setCity","state","setState","zip","setZip","country","setCountry","phone","setPhone","email","setEmail","cartList","Checkout","navigation","navigate","marginLeft","marginTop","text","alignItems","mapStateToProps","styles","StyleSheet","create","cartHeader","height","backgroundColor","flexDirection","justifyContent","headerText","color","fontSize","fontWeight","textAlign","paddingTop","marginRight","ClearBtn"],"sources":["C:/Users/User/Desktop/myProjectNative/online-ecom-frontend/pages/cart/Checkout/ProductCheckout.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Button,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { Item, Picker, Select } from \"native-base\";\r\nimport FormContainer from \"../../welcomeHeader/ReusableForms/FormContainer\";\r\nimport FormInput from \"../../welcomeHeader/ReusableForms/FormInput\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n//Dimensions\r\nconst { width } = Dimensions.get(\"window\").width;\r\n\r\nconst countries = require(\"../../../data/countries.json\");\r\n\r\nconst ProductCheckout = (props) => {\r\n  const [orders, setOrders] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [secondAddress, setSecondAddress] = useState();\r\n  const [city, setCity] = useState();\r\n  const [state, setState] = useState();\r\n  const [zip, setZip] = useState();\r\n  const [country, setCountry] = useState();\r\n  const [phone, setPhone] = useState();\r\n  const [email, setEmail] = useState();\r\n\r\n  useEffect(() => {\r\n    setOrders(props.cartList);\r\n\r\n    return () => {\r\n      setOrders([]);\r\n    };\r\n  }, []);\r\n\r\n  //pass information to Payment component\r\n  const Checkout = () => {\r\n    props.navigation.navigate(\"Payment\", {\r\n      orders: orders,\r\n      address: address,\r\n      secondAddress: secondAddress,\r\n      city: city,\r\n      state: state,\r\n      zip: zip,\r\n      country: country,\r\n      phone: phone,\r\n      email: email,\r\n    });\r\n\r\n    // let order = {\r\n    //   city,\r\n    //   country,\r\n    //   dateOrdered: Date.now(),\r\n    //   order,\r\n    //   phone,\r\n    //   state,\r\n    //   zip,\r\n    //   email,\r\n    //   address,\r\n    //   secondAddress,\r\n    // };\r\n    // props.navigation.navigate(\"Payment\", { order: order });\r\n  };\r\n\r\n  return (\r\n    <View style={{ marginLeft: 10, marginTop: 20 }}>\r\n      <KeyboardAwareScrollView\r\n        viewIsInsideTabBar={true}\r\n        extraHeight={200}\r\n        enableOnAndroid={true}\r\n      >\r\n        <FormContainer title=\"Shipping/Delivery Address\">\r\n          {/* <FormInput\r\n            placeholder={\"Phone\"}\r\n            onChangeText={(text) => setPhone(text)}\r\n            value={phone}\r\n            keyboardType={\"numeric\"}\r\n            name={\"phone\"}\r\n          /> */}\r\n\r\n          <FormInput\r\n            placeholder={\"Address 1\"}\r\n            onChangeText={(text) => setAddress(text)}\r\n            value={address}\r\n            name={\"Address 1\"}\r\n          />\r\n\r\n          <FormInput\r\n            placeholder={\"Address 2\"}\r\n            onChangeText={(text) => setSecondAddress(text)}\r\n            value={secondAddress}\r\n            name={\"Address 2\"}\r\n          />\r\n\r\n          <FormInput\r\n            placeholder={\"City\"}\r\n            onChangeText={(text) => setCity(text)}\r\n            value={city}\r\n            name={\"City\"}\r\n          />\r\n\r\n          {/* <FormInput\r\n            placeholder={\"State\"}\r\n            onChangeText={(text) => setState(text)}\r\n            value={state}\r\n            name={\"State\"}\r\n          /> */}\r\n\r\n          <FormInput\r\n            placeholder={\"Zip Code\"}\r\n            onChangeText={(text) => setZip(text)}\r\n            value={zip}\r\n            keyboardType={\"numeric\"}\r\n            name={\"Zip Code\"}\r\n          />\r\n\r\n          {/* <FormInput\r\n            placeholder={\"Email\"}\r\n            onChangeText={(text) => setEmail(text)}\r\n            value={email}\r\n            name={\"Email\"}\r\n          /> */}\r\n\r\n          <FormInput\r\n            placeholder={\"Country\"}\r\n            onChangeText={(text) => setCountry(text)}\r\n            value={country}\r\n            name={\"Country\"}\r\n          />\r\n\r\n          {/* <Item Picker>\r\n            <Picker\r\n              mode=\"dropdown\"\r\n              iosIcon={<Icon name=\"ios-arrow-down-outline\" />}\r\n              style={{ width: undefined }}\r\n              placeholder=\"Select your country\"\r\n              placeholderStyle={{ color: \"#bfc6ea\" }}\r\n              placeholderIconColor=\"#007aff\"\r\n              selectedValue={country}\r\n              onValueChange={(e) => setCountry(e)}\r\n            >\r\n              {countries.map((country) => {\r\n                const { name, code, iso } = country;\r\n                console.log(\"XXXXXXXXXXXXXXXXXXXXXXX:\", country);\r\n                return <Picker.Item key={name} label={code} value={iso} />;\r\n              })}\r\n            </Picker>\r\n          </Item> */}\r\n          <View style={{ width: \"100%\", alignItems: \"center\" }}>\r\n            <Button title=\"Checkout\" onPress={() => Checkout()} />\r\n          </View>\r\n        </FormContainer>\r\n      </KeyboardAwareScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\n// get cartList from store\r\nconst mapStateToProps = (state) => {\r\n  const { cartList } = state;\r\n  return {\r\n    cartList: cartList,\r\n  };\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  cartHeader: {\r\n    width: width,\r\n    height: 50,\r\n    backgroundColor: \"#1662A2\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  headerText: {\r\n    color: \"#fff\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    paddingTop: 10,\r\n    justifyContent: \"center\",\r\n    marginRight: 100,\r\n  },\r\n\r\n  ClearBtn: {\r\n    width: width,\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginLeft: 10,\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProductCheckout);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}