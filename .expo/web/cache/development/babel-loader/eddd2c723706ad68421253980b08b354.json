{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { RadioButton } from \"react-native-paper\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport StripApp from \"../../Stripe/StripApp\";\nimport { StripeProvider } from \"@stripe/stripe-react-native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar paymentMethod = [{\n  name: \"Cash on Delivery\",\n  value: 1\n}, {\n  name: \"Debit Card\",\n  value: 2\n}];\nvar paymentCards = [{\n  name: \"Visa\",\n  value: 1\n}];\n\nvar ProductPayment = function ProductPayment(props) {\n  var order = props.route.params;\n  console.log(\"SHOW ME NOW\", order);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selected = _React$useState2[0],\n      setSelected = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectCard = _React$useState4[0],\n      setSelectCard = _React$useState4[1];\n\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.titleHeader,\n      children: _jsx(Text, {\n        style: styles.titleText,\n        children: \"Payment Method\"\n      })\n    }), paymentMethod.map(function (item, index) {\n      return _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return setSelected(item.value);\n        },\n        style: styles.paymentCard,\n        children: [_jsx(View, {\n          style: {\n            marginLeft: 10,\n            marginTop: 20\n          },\n          children: _jsx(Icon, {\n            name: \"credit-card\",\n            size: 25,\n            color: \"#1662A2\"\n          })\n        }), _jsx(View, {\n          style: {\n            marginRight: 210,\n            width: 140,\n            marginTop: -6\n          },\n          children: _jsx(Text, {\n            style: styles.paymentText,\n            children: item.name\n          })\n        }), _jsx(View, {\n          style: {\n            marginLeft: -50,\n            marginTop: 15\n          },\n          children: _jsx(RadioButton, {\n            value: item.value,\n            status: selected === item.value ? \"checked\" : \"unchecked\",\n            color: \"#1662A2\",\n            selected: selected == item.value\n          })\n        })]\n      }, item.name);\n    }), selected == 3 ? _jsx(Picker, {\n      mode: \"dropdown\",\n      iosIcon: _jsx(Icon, {\n        name: \"arrow-down\",\n        color: \"#1662A2\"\n      }),\n      style: {\n        width: 370,\n        marginLeft: 10,\n        backgroundColor: \"#FBDDC7\",\n        marginTop: 20\n      },\n      selectedValue: selectCard,\n      onValueChange: function onValueChange(itemValue) {\n        return setSelectCard(itemValue);\n      },\n      headerTitleStyle: \"Select Card\",\n      headerBackButtonTextStyle: \"white\",\n      children: paymentCards.map(function (item, index) {\n        console.log(\"RESULTS:\", item);\n        return _jsx(Picker.Item, {\n          label: item.name,\n          value: item.value\n        }, item.name);\n      })\n    }) : null, _jsx(View, {\n      style: {\n        marginTop: 30,\n        alignSelf: \"center\"\n      },\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Confirm\", {\n            order: order\n          });\n        },\n        children: _jsx(View, {\n          style: {\n            width: 200,\n            height: 50,\n            backgroundColor: \"#1662A2\",\n            borderRadius: 10\n          },\n          children: _jsx(Text, {\n            style: {\n              alignSelf: \"center\",\n              marginTop: 14,\n              fontSize: 18,\n              fontWeight: \"bold\",\n              color: \"#fff\"\n            },\n            children: \"Confirm Payment\"\n          })\n        })\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  titleHeader: {\n    width: \"100%\",\n    height: 50,\n    backgroundColor: \"#1662A2\",\n    marginTop: 30\n  },\n  titleText: {\n    fontSize: 17,\n    marginLeft: 10,\n    justifyContent: \"center\",\n    marginTop: 12,\n    color: \"#fff\"\n  },\n  paymentCard: {\n    flexDirection: \"row\",\n    width: \"95%\",\n    height: 60,\n    marginLeft: 10,\n    marginTop: 20,\n    borderRadius: 15,\n    backgroundColor: \"#fff\",\n    justifyContent: \"space-between\",\n    marginBottom: -16\n  },\n  paymentText: {\n    marginLeft: 10,\n    fontSize: 17,\n    fontWeight: \"bold\",\n    marginTop: 26\n  }\n});\nexport default ProductPayment;","map":{"version":3,"names":["React","Icon","RadioButton","Picker","StripApp","StripeProvider","paymentMethod","name","value","paymentCards","ProductPayment","props","order","route","params","console","log","useState","selected","setSelected","selectCard","setSelectCard","styles","titleHeader","titleText","map","item","index","paymentCard","marginLeft","marginTop","marginRight","width","paymentText","backgroundColor","itemValue","alignSelf","navigation","navigate","height","borderRadius","fontSize","fontWeight","color","StyleSheet","create","justifyContent","flexDirection","marginBottom"],"sources":["C:/Users/User/Desktop/myProjectNative/online-ecom-frontend/pages/cart/Checkout/ProductPayment.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet, Button, TouchableOpacity } from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { RadioButton } from \"react-native-paper\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport StripApp from \"../../Stripe/StripApp\";\r\nimport { StripeProvider } from \"@stripe/stripe-react-native\";\r\n\r\nconst paymentMethod = [\r\n  { name: \"Cash on Delivery\", value: 1 },\r\n  // { name: \"Credit Card\", value: 2 },\r\n  { name: \"Debit Card\", value: 2 },\r\n];\r\n\r\n//paymentment cards\r\nconst paymentCards = [\r\n  { name: \"Visa\", value: 1 },\r\n  // { name: \"Verve\", value: 2 },\r\n  // { name: \"Master\", value: 3 },\r\n];\r\n\r\nconst ProductPayment = (props) => {\r\n  const order = props.route.params;\r\n  console.log(\"SHOW ME NOW\", order);\r\n\r\n  const [selected, setSelected] = React.useState();\r\n  const [selectCard, setSelectCard] = React.useState();\r\n\r\n  return (\r\n    <View>\r\n      <View style={styles.titleHeader}>\r\n        <Text style={styles.titleText}>Payment Method</Text>\r\n      </View>\r\n\r\n      {paymentMethod.map((item, index) => {\r\n        return (\r\n          <TouchableOpacity\r\n            key={item.name}\r\n            onPress={() => setSelected(item.value)}\r\n            style={styles.paymentCard}\r\n          >\r\n            <View style={{ marginLeft: 10, marginTop: 20 }}>\r\n              <Icon name=\"credit-card\" size={25} color={\"#1662A2\"} />\r\n            </View>\r\n            <View\r\n              style={{\r\n                marginRight: 210,\r\n                width: 140,\r\n                marginTop: -6,\r\n              }}\r\n            >\r\n              <Text style={styles.paymentText}>{item.name}</Text>\r\n            </View>\r\n            <View style={{ marginLeft: -50, marginTop: 15 }}>\r\n              <RadioButton\r\n                value={item.value}\r\n                status={selected === item.value ? \"checked\" : \"unchecked\"}\r\n                color=\"#1662A2\"\r\n                selected={selected == item.value}\r\n              />\r\n            </View>\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n      {selected == 3 ? (\r\n        <Picker\r\n          mode=\"dropdown\"\r\n          iosIcon={<Icon name=\"arrow-down\" color=\"#1662A2\" />}\r\n          style={{\r\n            width: 370,\r\n            marginLeft: 10,\r\n            backgroundColor: \"#FBDDC7\",\r\n            marginTop: 20,\r\n          }}\r\n          selectedValue={selectCard}\r\n          onValueChange={(itemValue) => setSelectCard(itemValue)}\r\n          headerTitleStyle=\"Select Card\"\r\n          headerBackButtonTextStyle=\"white\"\r\n        >\r\n          {paymentCards.map((item, index) => {\r\n            console.log(\"RESULTS:\", item);\r\n            return (\r\n              <Picker.Item\r\n                key={item.name}\r\n                label={item.name}\r\n                value={item.value}\r\n              />\r\n            );\r\n          })}\r\n        </Picker>\r\n      ) : null}\r\n      <View style={{ marginTop: 30, alignSelf: \"center\" }}>\r\n        <TouchableOpacity\r\n          onPress={() => props.navigation.navigate(\"Confirm\", { order })}\r\n        >\r\n          <View\r\n            style={{\r\n              width: 200,\r\n              height: 50,\r\n              backgroundColor: \"#1662A2\",\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                alignSelf: \"center\",\r\n                marginTop: 14,\r\n                fontSize: 18,\r\n                fontWeight: \"bold\",\r\n                color: \"#fff\",\r\n              }}\r\n            >\r\n              Confirm Payment\r\n            </Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  titleHeader: {\r\n    width: \"100%\",\r\n    height: 50,\r\n    backgroundColor: \"#1662A2\",\r\n    marginTop: 30,\r\n  },\r\n\r\n  titleText: {\r\n    fontSize: 17,\r\n    marginLeft: 10,\r\n    justifyContent: \"center\",\r\n    marginTop: 12,\r\n    color: \"#fff\",\r\n  },\r\n\r\n  paymentCard: {\r\n    flexDirection: \"row\",\r\n    width: \"95%\",\r\n    height: 60,\r\n    marginLeft: 10,\r\n    marginTop: 20,\r\n    borderRadius: 15,\r\n    backgroundColor: \"#fff\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: -16,\r\n  },\r\n\r\n  paymentText: {\r\n    marginLeft: 10,\r\n    fontSize: 17,\r\n    fontWeight: \"bold\",\r\n    marginTop: 26,\r\n  },\r\n});\r\n\r\nexport default ProductPayment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}