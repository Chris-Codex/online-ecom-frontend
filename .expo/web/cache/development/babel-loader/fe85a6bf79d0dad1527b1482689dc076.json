{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport Toast from \"react-native-toast-message\";\nimport Wheader from \"./pages/welcomeHeader/Wheader\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport MainNavigation from \"./navigations/MainNavigation\";\nimport Authentication from \"./ContextApi/store/Authentication\";\nimport { Provider } from \"react-redux\";\nimport store from \"./App_Redux/store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MyTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    background: \"#F7E4DE\"\n  })\n});\n\nLogBox.ignoreAllLogs(true);\nexport default function App() {\n  return _jsx(Authentication, {\n    children: _jsx(Provider, {\n      store: store,\n      children: _jsxs(NavigationContainer, {\n        theme: MyTheme,\n        children: [_jsx(MainNavigation, {}), _jsx(Toast, {\n          forwardRef: function forwardRef(_forwardRef) {\n            return Toast.setRef(_forwardRef);\n          }\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["Toast","Wheader","NavigationContainer","DefaultTheme","MainNavigation","Authentication","Provider","store","MyTheme","colors","background","LogBox","ignoreAllLogs","App","forwardRef","setRef"],"sources":["C:/Users/User/Desktop/myProjectNative/online-ecom-frontend/App.js"],"sourcesContent":["import { LogBox } from \"react-native\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport Wheader from \"./pages/welcomeHeader/Wheader\";\r\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\r\n\r\n// Navigations\r\nimport MainNavigation from \"./navigations/MainNavigation\";\r\n\r\n// Contexts\r\nimport Authentication from \"./ContextApi/store/Authentication\";\r\n\r\n// Redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./App_Redux/store\";\r\n\r\nconst MyTheme = {\r\n  ...DefaultTheme,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    background: \"#F7E4DE\",\r\n  },\r\n};\r\n\r\nLogBox.ignoreAllLogs(true);\r\nexport default function App() {\r\n  return (\r\n    <Authentication>\r\n      <Provider store={store}>\r\n        <NavigationContainer theme={MyTheme}>\r\n          <MainNavigation />\r\n          <Toast forwardRef={(forwardRef) => Toast.setRef(forwardRef)} />\r\n        </NavigationContainer>\r\n      </Provider>\r\n    </Authentication>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;AACA,OAAOA,KAAP,MAAkB,4BAAlB;AACA,OAAOC,OAAP;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,0BAAlD;AAGA,OAAOC,cAAP;AAGA,OAAOC,cAAP;AAGA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP;;;;AAEA,IAAMC,OAAO,mCACRL,YADQ;EAEXM,MAAM,kCACDN,YAAY,CAACM,MADZ;IAEJC,UAAU,EAAE;EAFR;AAFK,EAAb;;AAQAC,MAAM,CAACC,aAAP,CAAqB,IAArB;AACA,eAAe,SAASC,GAAT,GAAe;EAC5B,OACE,KAAC,cAAD;IAAA,UACE,KAAC,QAAD;MAAU,KAAK,EAAEN,KAAjB;MAAA,UACE,MAAC,mBAAD;QAAqB,KAAK,EAAEC,OAA5B;QAAA,WACE,KAAC,cAAD,KADF,EAEE,KAAC,KAAD;UAAO,UAAU,EAAE,oBAACM,WAAD;YAAA,OAAgBd,KAAK,CAACe,MAAN,CAAaD,WAAb,CAAhB;UAAA;QAAnB,EAFF;MAAA;IADF;EADF,EADF;AAUD"},"metadata":{},"sourceType":"module"}